[{"/Users/denisfeier/Documents/ReactTS/app3/src/App.tsx":"1","/Users/denisfeier/Documents/ReactTS/app3/src/reportWebVitals.ts":"2","/Users/denisfeier/Documents/ReactTS/app3/src/util/classesComposer/classesComposer.ts":"3","/Users/denisfeier/Documents/ReactTS/app3/src/component/Header/Header.tsx":"4","/Users/denisfeier/Documents/ReactTS/app3/src/index.tsx":"5","/Users/denisfeier/Documents/ReactTS/app3/src/component/Modal/Modal.tsx":"6","/Users/denisfeier/Documents/ReactTS/app3/src/component/Sidenav/Sidnav.tsx":"7","/Users/denisfeier/Documents/ReactTS/app3/src/context/SidenavContext.tsx":"8"},{"size":461,"mtime":1612093900980,"results":"9","hashOfConfig":"10"},{"size":425,"mtime":1612036076086,"results":"11","hashOfConfig":"10"},{"size":183,"mtime":1612038937992,"results":"12","hashOfConfig":"10"},{"size":1103,"mtime":1612096480363,"results":"13","hashOfConfig":"10"},{"size":500,"mtime":1612096780207,"results":"14","hashOfConfig":"10"},{"size":593,"mtime":1612096697545,"results":"15","hashOfConfig":"10"},{"size":789,"mtime":1612096547931,"results":"16","hashOfConfig":"10"},{"size":649,"mtime":1612099839045,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"4tqs8k",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/denisfeier/Documents/ReactTS/app3/src/App.tsx",[],"/Users/denisfeier/Documents/ReactTS/app3/src/reportWebVitals.ts",[],"/Users/denisfeier/Documents/ReactTS/app3/src/util/classesComposer/classesComposer.ts",[],"/Users/denisfeier/Documents/ReactTS/app3/src/component/Header/Header.tsx",["36","37","38","39","40","41"],"import React, { FC, useContext } from 'react';\n\nimport classes from './Header.module.css';\nimport {SidenavToggleContext} from '../../context/SidenavContext';\nimport SidenavContextType from '../../Types/SidenavContextType';\n\n\nconst Header: FC = () => {\n\n    const { \n        isOpen,\n        toggleSidenav \n    } = useContext(SidenavToggleContext) as SidenavContextType;\n\n    const stackButtonHandler = () => {\n        toggleSidenav(!isOpen);\n    }\n\n    return <div>\n        <div className={classes.topnav}>\n            \n            <div className={classes.stackButton} onClick={stackButtonHandler}>\n                <div className={classes.bar1}></div>\n                <div className={classes.bar2}></div>\n                <div className={classes.bar3}></div>\n            </div>\n            \n            \n            <div className={classes.spacer}/>\n\n            <a className={classes.active}>Films</a>\n            <a>People</a>\n            <a>Planets</a>\n            <a>Species</a>\n            <a>Starships</a>\n            <a>Vehicles</a>\n            \n        </div>\n    </div>\n};\n\nexport default Header;","/Users/denisfeier/Documents/ReactTS/app3/src/index.tsx",[],"/Users/denisfeier/Documents/ReactTS/app3/src/component/Modal/Modal.tsx",["42"],"/Users/denisfeier/Documents/ReactTS/app3/src/component/Sidenav/Sidnav.tsx",["43","44","45","46"],"import React, { FC, useContext } from 'react';\n\nimport classes from './Sidenav.module.css';\nimport {SidenavToggleContext} from '../../context/SidenavContext';\nimport SidenavContextType from '../../Types/SidenavContextType';\n\n\nconst Sidenav: FC = () => {\n\n    const { \n        isOpen,\n        toggleSidenav \n    } = useContext(SidenavToggleContext) as SidenavContextType;\n\n    const closeButtonHandler = () => {\n        toggleSidenav(false);\n    }\n\n    return <div className={classes.sidenav} style={{ width: isOpen? '250px' : '0' }}>\n        <button className={classes.closebtn} onClick={closeButtonHandler}>&times;</button>\n        <a href=\"#\">About</a>\n        <a href=\"#\">Services</a>\n        <a href=\"#\">Clients</a>\n        <a href=\"#\">Contact</a>\n    </div>\n}\n\nexport default Sidenav;","/Users/denisfeier/Documents/ReactTS/app3/src/context/SidenavContext.tsx",[],{"ruleId":"47","severity":1,"message":"48","line":31,"column":13,"nodeType":"49","endLine":31,"endColumn":43},{"ruleId":"47","severity":1,"message":"48","line":32,"column":13,"nodeType":"49","endLine":32,"endColumn":16},{"ruleId":"47","severity":1,"message":"48","line":33,"column":13,"nodeType":"49","endLine":33,"endColumn":16},{"ruleId":"47","severity":1,"message":"48","line":34,"column":13,"nodeType":"49","endLine":34,"endColumn":16},{"ruleId":"47","severity":1,"message":"48","line":35,"column":13,"nodeType":"49","endLine":35,"endColumn":16},{"ruleId":"47","severity":1,"message":"48","line":36,"column":13,"nodeType":"49","endLine":36,"endColumn":16},{"ruleId":"50","severity":1,"message":"51","line":1,"column":21,"nodeType":"52","messageId":"53","endLine":1,"endColumn":30},{"ruleId":"47","severity":1,"message":"54","line":21,"column":9,"nodeType":"49","endLine":21,"endColumn":21},{"ruleId":"47","severity":1,"message":"54","line":22,"column":9,"nodeType":"49","endLine":22,"endColumn":21},{"ruleId":"47","severity":1,"message":"54","line":23,"column":9,"nodeType":"49","endLine":23,"endColumn":21},{"ruleId":"47","severity":1,"message":"54","line":24,"column":9,"nodeType":"49","endLine":24,"endColumn":21},"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","@typescript-eslint/no-unused-vars","'ReactNode' is defined but never used.","Identifier","unusedVar","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md"]